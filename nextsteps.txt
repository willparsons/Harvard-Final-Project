Priority:
    - Adding friends
    - Private rooms
    - Message delete
    - Message edit


User interface
    - Look into bootstrap further for an optimal design spec for this context
        - Maybe articles?

    React (future)
    - We can have a base layout for how the pages are populated,
        but the messages will be made via components


Friends
    - Initially we should add friends directly via their username (since they are unique)
    - Then we can show recommended friends (mutual friends)
    - We need friend requests


DJANGO WEBSOCKET PROTOCOL @lymotas
    - Users should be able to see when the other person is typing
    - And once the message is sent it should update on our end without a page refresh

Rooms
    - All rooms need to be private
    - Users should select friends to make a room with
    - Can select up to 9 additional people for a group room

Websocket
    - We should find a way to change the way weo access rooms
    - The url solution is somewhat weird (chat/room_name)
    - Rooms should not be constrained to the name associated with them,
        they should be infinite and private (not accessible via url)

Messages
    - Delete a message (only the author can delete)
    - Edit a message (only the author can delete)
    - Timestamp formatting should be neater
        Should say hours until it hits 24, then switch to days
        -> "23 hours ago", "1 day ago"